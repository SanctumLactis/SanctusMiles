version: "3"

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  db-exporter:
    image:  quay.io/prometheuscommunity/postgres-exporter
    networks:
      - back-tier
    ports:
      - 9187:9187
    env_file:
      - .env
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - alertmanager:alertmanager
    networks:
      - back-tier
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
  
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: unless-stopped

  db:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - ./db_data/:/var/lib/postgresql/data
    networks:
      - back-tier
    restart: unless-stopped

  app:
    build: .
    entrypoint: >
      bash -c "./scripts/app-setup.sh"
    volumes:
      - .:/app
    ports:
      - "8080:8080"
      - "80:80"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - back-tier
      - front-tier
    restart: unless-stopped
